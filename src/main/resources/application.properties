spring.application.name=UserService
server.port=3030
logging.level.org.springframework = TRACE
spring.jpa.hibernate.ddl-auto=none
spring.datasource.url= ${USER_SERVICE_DATABASE_URL}
spring.datasource.username=${USER_SERVICE_USERNAME}
spring.datasource.password=${USER_SERVICE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql: true

#eureka service discovery
spring.cloud.compatibility-verifier.enabled=false
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true


#AWS RDS
# USER_SERVICE_DATABASE_URL=jdbc:mysql://userservice-production.czgkgw6m27ut.eu-north-1.rds.amazonaws.com:3306/userservice;USER_SERVICE_USERNAME=userserviceuser;USER_SERVICE_PASSWORD=password


#spring.security.user.name=user
#spring.security.user.password=password
#
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-id=oidc-client
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-secret={noop}secret
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-authentication-methods[0]=client_secret_basic
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.authorization-grant-types[0]=authorization_code
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.authorization-grant-types[1]=refresh_token
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.redirect-uris[0]=http://127.0.0.1:8080/login/oauth2/code/oidc-client
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.post-logout-redirect-uris[0]=http://127.0.0.1:8080/
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.scopes[0]=openid
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.scopes[1]=profile
#
#spring.security.oauth2.authorizationserver.client.oidc-client.require-authorization-consent=true
